
int[] primes = { 2, 3, 5, 7, 11, 13, 17 };
long sum = 0;
int[] RemoveAtInt(int[] source, int index)
{
    int[] dest = new int[source.Length - 1];
    if (index > 0)
        Array.Copy(source, 0, dest, 0, index);

    if (index < source.Length - 1)
        Array.Copy(source, index + 1, dest, index, source.Length - index - 1);

    return dest;
}
for (int i = 1; i < 10; i++)
{
    int[] nums = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 };
    long currNum = nums[i];
    int[] newArr = RemoveAtInt(nums, i);
    doLoop(currNum, newArr.Length, newArr);
}


void doLoop(long currNum, int length, int[] availableNums) 
{
    long last3Digits = (currNum % 1000);
    for(int i = 0; i < primes.Length; i++) 
    {
        if (currNum.ToString().Length == 4+i)
        {
            if (last3Digits % primes[i] != 0) { return; }
        }
    }
    
    if (availableNums.Length == 0)
    {
        sum += currNum;
    }
    else
    {
        for (int i = 0; i < length; i++)
        {
            int[] tempArr = new int[availableNums.Length];
            Array.Copy(availableNums, 0, tempArr, 0, availableNums.Length);
            int[] newArr = RemoveAtInt(tempArr, i);
            doLoop((currNum * 10) + availableNums[i], newArr.Length, newArr);
        }
    }
}
Console.WriteLine(sum);
